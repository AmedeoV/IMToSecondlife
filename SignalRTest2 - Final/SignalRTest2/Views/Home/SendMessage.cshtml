@model Textosecondlife.Models.HomeModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>

<head>
    <style type="text/css">
        #loading {
            display: none;
            position: fixed;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.8);
            z-index: 1000;
        }

        #loadingcontent {
            display: table;
            position: fixed;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
        }

        #loadingspinner {
            display: table-cell;
            vertical-align: middle;
            width: 100%;
            text-align: center;
            font-size: larger;
            padding-top: 80px;
        }
    </style>

    <div id="Usernames">
        <aside>
            @if (ViewBag.MyList != null)
            {
                <h4>Friends online:</h4>

                foreach (var item in ViewBag.MyList)
                {
                <tr>
                    <td>
                        @Html.ActionLink((string)item, null, null, new { conName = item.ToString() }, new { onclick = "AssignButtonClicked('" + item.ToString() + "');return false;" })<br />


                        @*<li>@Html.ActionLink(item, "ChatWith", new { item })</li>*@
                        @*                        @Html.DisplayFor(modelItem => item)<br/>*@
                    </td>
                </tr>
                }
            }
            else
            {
@*<h4>No Friends online :(</h4>*@
            }
        </aside>
    </div>

    <title>Customer Form</title>
    <style type="text/css">
        .column {
            float: left;
            width: auto;
            border: hidden;
            margin-right: auto;
            padding: initial;
            /*background-color:white;*/
            /*min-height:500px;*/
        }
    </style>
</head>
@using (Html.BeginForm("SecondLifeLogIn", "Home"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <body>

        @if (ViewData["Message"] != null)
        {
            <span style="color: #04B431"><font size="4"> <strong>Message inviated successfully!</strong> </font></span>
        }
        <div class="container">
            <div id="right">

                <div>
                    <p>@Html.LabelFor(m => m.FromUsername)</p>
                    @(ViewBag.Username != null ? Html.TextBoxFor(m => m.FromUsername, new { @Value = ViewBag.Username }) : Html.TextBoxFor(m => m.FromUsername))
                </div>
                <div>
                    <p>
                        <label>To * :</label>
                    </p>

                </div>
                <div>
                    <p>@Html.DisplayNameFor(m => m.slFirstName)</p>
                    @(ViewBag.Firstname != null ? Html.TextBoxFor(m => m.slFirstName, new { @Value = ViewBag.Firstname }) : Html.TextBoxFor(m => m.slFirstName, new { @required = "required" }))

                </div>
                <div>
                    <p>@Html.DisplayNameFor(m => m.slLastName)</p>
                    @(ViewBag.Lastname != null ? Html.TextBoxFor(m => m.slLastName, new { @Value = ViewBag.Lastname }) : Html.TextBoxFor(m => m.slLastName, new { @required = "required" }))
                </div>
                <div>
                    <p>@Html.LabelFor(m => m.Message)</p>
                    @Html.TextAreaFor(m => m.Message)
                    <label>&nbsp;</label>
                    <p>
                        <input type="submit" id="submitbtn" name="Send" value="Send" class="submit" />
                    </p>
                </div>


                <div class="left">

                    <h4>Getting Started</h4>
                    <p>Click on your friend's name or enter the first and last name of the person you want to message on Secondlife.</p>
                    <p>Type your message and click on "Send".</p>

                    <h4>About</h4>
                    <p>
                        IM to Grid is a free service, if you have any questions or suggestions,
                        please send me a message: <b>Cobain86 Dryke</b>
                    </p>
                    <p>If you find <b>IM to Grid</b> useful, please consider donating by <span><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=amedeo%2evertullo%40gmail%2ecom&lc=GB&item_name=Text%20To%20Secondlife&no_note=0&currency_code=GBP&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHostedGuest" target="_blank">clicking here.</a></span></p>
                    <p>Your contributions are greatly appreciated.</p>
                    <b>IM to Grid is not an official Second Life viewer/client from Linden Lab and is not provided or supported by Linden Lab, the makers of Second Life.
                    </b>
                    <h4>Android App</h4>
                    <p>
                        If you have an Android Phone, try out the app on Google Play: <span><a href="https://play.google.com/store/apps/details?id=nirvanacreations.slText" target="_blank">Text To Secondlife</a></span> It's FREE!
                    </p>
                </div>
            </div>
        </div>
        <div id="loading">
            <div id="loadingcontent">
                <p id="loadingspinner">
                    Sending Message...
                </p>
            </div>
        </div>
    </body>
    
    <p>
    </p>
}

<script type="text/javascript" 
        src="@Url.Content("~/Scripts/spin.js")"></script>

<script>

    $(function () {
        $("#submitbtn").click(function () {
            var firstName = $('#slFirstName').val().trim();
            var lastName = $('#slLastName').val().trim();

            if (firstName != '' && lastName != '') {

                $("#loading").fadeIn();
                var opts = {
                    lines: 12, // The number of lines to draw
                    length: 7, // The length of each line
                    width: 4, // The line thickness
                    radius: 10, // The radius of the inner circle
                    color: '#000', // #rgb or #rrggbb
                    speed: 1, // Rounds per second
                    trail: 60, // Afterglow percentage
                    shadow: false, // Whether to render a shadow
                    hwaccel: false // Whether to use hardware acceleration
                };
                var target = document.getElementById('loading');
                var spinner = new Spinner(opts).spin(target);
            }
        });
    });

    function AssignButtonClicked(obj) {
        var array = obj.split(' '),
            a = array[0],
            b = array[1];
        var sup = $('#slFirstName').val(a);
        var sup1 = $('#slLastName').val(b);
        return false;
    }

</script>
<script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-74425525-1', 'auto');
    ga('send', 'pageview');

</script>
</html>
