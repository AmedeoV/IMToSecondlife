@model Textosecondlife.Models.HomeModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>

<head>
    <div style="height: 200px; width: auto; overflow: auto;">
        <aside>
            @if (Model.OnlineUsers != null)
            {
                <h4>Friend List</h4>
                <table>
                    @foreach (var item in Model.OnlineUsers)
                    {
                        <tr>
                            <td>
                                @if (item.FriendName != null)
                                {
                                    <img src="@Url.Content("~/content/greenDot.png")"/>
                                    @Html.ActionLink(item.FriendName, "StartChat", "Home", new { userUid = item.Uiid, toUsername = item.FriendName, myUserID = item.MyUserUiid }, null)
                                }
                            </td>
                        </tr>
                    }
                    @if (Model.OfflineUsers != null)
                    {
                        foreach (var item in Model.OfflineUsers)
                        {
                        <tr>
                            <td>
                                @if (item.FriendName != null)
                                {
                                    <img src="@Url.Content("~/content/red-dot2.png")"/>
                                    @Html.ActionLink(item.FriendName, "StartChat", "Home", new { userUid = item.Uiid, toUsername = item.FriendName, myUserID = item.MyUserUiid }, null)
                                }
                            </td>
                        </tr>
                        }
                    }
                </table>
            }
        </aside>
    </div>
</head>
@Html.ValidationSummary()



<div id='divResult'>
</div>

<div class="left">

    <h4>Getting Started</h4>
    <p>Click on your friend's name or enter the first and last name of the person you want to message on Secondlife.</p>
    <p>Type your message and click on "Send".</p>

    <h4>About</h4>
    <p>
        IM to Grid is a free service, if you have any questions or suggestions,
                        please send me a message: <b>Cobain86 Dryke</b>
    </p>
    <p>If you find <b>IM to Grid</b> useful, please consider donating by <span><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=amedeo%2evertullo%40gmail%2ecom&lc=GB&item_name=Text%20To%20Secondlife&no_note=0&currency_code=GBP&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHostedGuest" target="_blank">clicking here.</a></span></p>
    <p>Your contributions are greatly appreciated.</p>
    <b>IM to Grid is not an official Second Life viewer/client from Linden Lab and is not provided or supported by Linden Lab, the makers of Second Life.
    </b>
    <h4>Android App</h4>
    <p>
        If you have an Android Phone, try out the app on Google Play: <span><a href="https://play.google.com/store/apps/details?id=nirvanacreations.slText" target="_blank">Text To Secondlife</a></span> It's FREE!
    </p>
</div>

<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>

<script>
    var callETs = setInterval(function() { callMessages() }, 3000);

    function callMessages() {

        var url = '@Url.Action("FriendList", "Home", new {myUserId = @ViewBag.dddd }, null)';
        $.get(url);
    }
</script>
<script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-74425525-1', 'auto');
    ga('send', 'pageview');

</script>
</html>
